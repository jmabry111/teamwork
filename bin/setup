#!/usr/bin/env sh

# Exit if any subcommand fails
set -e

# Unset CDPATH to avoid issues with make later on
unset CDPATH

# set up environment variables if not set up yet
if [ ! -f .env ]; then
  echo "Copying .env file"
  cp .sample.env .env
fi

# check if phantomjs is installed
if ! command -v phantomjs >/dev/null; then
  echo "You must install PhantomJS 2.x before continuing."
  exit 1
else
  phantomjs_version=$(phantomjs -v)
  major_version="${phantomjs_version%.*.*}"

  if ((major_version < 2)); then
    echo "Please update your PhantomJS to 2.x before continuing."
    exit 1
  fi
fi

if [ -z "$CI" ]; then
  echo "Removing previous build artifacts"
  rm -rf node_modules
  rm -rf deps _build
fi

asdf install

echo "Installing dependencies and compiling"
mix local.hex --force
mix local.rebar --force
mix deps.get
mix deps.compile
mix compile

# Set up database
echo "Setting up the database"
mix ecto.reset
MIX_ENV="test" mix ecto.reset
mix do development_seeds

# Grab JS dependencies from NPM
echo "Installing npm dependencies"
npm install --progress=false

echo "Setting up Heroku and git remotes"

if git config remote.staging.url; then
  git remote remove staging
fi

git remote add staging git@heroku.com:smcc-connection-staging.git > /dev/null || true

if git config remote.production.url; then
  git remote remove production
fi

git remote add production git@heroku.com:smcc-connection-prod.git > /dev/null || true
